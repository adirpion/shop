{"version":3,"sources":["components/Header.jsx","components/Title.jsx","components/Product.jsx","components/Cart.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","cartPage","showCart","state","productsPage","showProducts","className","onClick","this","Component","Title","title","Product","addToCart","add","index","price","inCart","Cart","showTheCart","cart","totalCart","totalPrice","map","product","checkOut","checkout","emptyCart","i","key","id","style","marginTop","App","products","historyCart","flag","addProductToCart","setState","alert","showPage","item","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5916f986.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Header extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            showProducts: false,\r\n            showCart: true\r\n        }\r\n    }\r\n\r\n    cartPage = () =>{\r\n        this.props.showCart(this.state.showCart);\r\n    }\r\n    productsPage = () => {\r\n        this.props.showProducts(this.state.showProducts);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                 <div onClick={this.productsPage} className=\"menu\">MY SHOP</div> \r\n                 <div onClick={this.cartPage} className=\"menu\"><span>ðŸ›’</span>CART</div>   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Title(props) {\r\n    return (\r\n        <div>\r\n            <h2 className=\"title\">{props.title}</h2> \r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Title from \"./Title\";\r\n\r\nexport default class Product extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            index: props.index,\r\n            title: this.props.title,\r\n            price: this.props.price,\r\n            inCart: false\r\n        }\r\n    }\r\n\r\n    addToCart = () => {\r\n        this.props.add(this.state.index, this.state.title, this.state.price, this.state.inCart);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"product\">\r\n                <h3 className=\"productTitle\">{this.props.title}</h3>\r\n                <h4 className=\"price\">${this.props.price}</h4>\r\n                <button onClick={this.addToCart} className=\"add-to-cart\">add to cart</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nexport default class Cart extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            cart: this.props.cart,\r\n            emptyCart:\"\"\r\n        }\r\n    }\r\n    showTheCart = () =>{\r\n        this.props.showCart(this.state.cart);\r\n    }\r\n\r\n    totalCart = () =>{\r\n        let totalPrice = 0;\r\n        this.props.cart.map((product) => {\r\n            totalPrice += product.price;\r\n        });\r\n        return totalPrice;\r\n    }\r\n\r\n    checkOut = () =>{\r\n        this.props.checkout(this.state.emptyCart)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"cart\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>SKU</th>\r\n                                <th>Title</th>\r\n                                <th>Price</th>\r\n                            </tr>\r\n                            {this.props.cart.map((product, i)=>{\r\n                                return (\r\n                                    <tr key={i}>\r\n                                        <td>{product.id}</td>\r\n                                        <td>{product.title}</td>\r\n                                        <td>{product.price}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}   \r\n                        </tbody>\r\n                    </table>    \r\n                </div>\r\n                <span>Total : ${this.totalCart()} </span> <br/>\r\n                <button onClick={this.checkOut} style={{marginTop:'30px'}} className=\"add-to-cart\">checkout</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Title from './components/Title';\nimport Product from './components/Product';\nimport Cart from './components/Cart';\n\nclass App extends Component {\n\n  state = {\n      products: [\n          {id:\"SED454G\", title: \"Trek Bike Fuel EX 30\", price: 129},\n          {id:\"FRF234G\", title: \"Bianchi Bike ZR 217\", price: 299},\n          {id:\"GHT564G\", title: \"Spacialized Bike TW 7\", price: 99},\n          {id:\"KLD856G\", title: \"Nixon Bike R152565\", price: 179}\n      ]\n  ,\n    historyCart:[],\n    cart:[],\n    flag:false\n  }\n\n  addProductToCart = (i,title,price) => {\n      this.setState({cart:[{title:title, price:price, id:i, inCart:true},...this.state.cart]});\n      alert(\"Product has been add to your cart\");\n  }\n\n  checkOut = () => {\n    this.setState({historyCart:[...this.state.cart]});\n    this.setState({cart:[]});\n  }  \n  showPage = () =>{\n    if (this.state.flag == true){\n        return(\n          <div>\n            <Title title=\"Cart\" />\n            <Cart cart={this.state.cart} checkout={this.checkOut} />\n          </div>       \n        )\n    }\n    else {\n      return (\n        <div>\n        <Title title=\"Our Products\" />\n          <div className=\"products-wrapper\">\n            \n            {this.state.products.map((item, i) => {\n              return <Product title={item.title} price={item.price} index={item.id} add={this.addProductToCart} />\n            })}\n          </div>\n        </div>\n     )\n\n    }\n  }\n  \n  showCart = () =>{\n    this.setState({flag: true});\n  }\n\n  showProducts = () =>{\n    this.setState({flag: false});\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header showProducts={this.showProducts} showCart={this.showCart}/>\n          {this.showPage()}\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}